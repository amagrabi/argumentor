.profile-button {
  min-width: 36px;
  min-height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.loading-dots::after {
  content: ".";
  animation: dot-animation 1.5s infinite;
}

@keyframes dot-animation {
  0% {
    content: ".";
  }
  33% {
    content: "..";
  }
  66% {
    content: "...";
  }
  100% {
    content: ".";
  } /* Cycle back to single dot */
}

/* Enhance the contrast of category badges/icons on dark backgrounds */
.category-badge {
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.75);
}

input:focus,
textarea:focus {
  outline: none;
  border-color: #4b5563;
  box-shadow: 0 0 0 1px rgba(75, 85, 99, 0.5);
}

.category-item.selected {
  background-color: #2f363f;
  color: #fff;
  border-color: #000000;
}

.category-item {
  background-color: #fff;
  color: #000000;
}

.total-progress-bar {
  transition: width 0.5s ease-out, background-color 0.5s ease-out;
  height: 100%;
}

/* Animate the progress bar fill */
.progress-fill {
  transition: width 0.4s ease-out, background-color 0.4s ease-out;
}

/* Fade-in effect for evaluation results */
.fade-in {
  animation: fadeInAnimation 0.5s ease-in-out;
}

@keyframes fadeInAnimation {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Educational Cards */
.educational-card {
  border: 1px solid #e5e7eb;
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  min-height: 120px;
  display: flex;
  flex-direction: column;
  height: 100%; /* Ensure all cards are same height */
}

.card-header {
  border-bottom: 1px solid #e5e7eb;
  padding: 0.5rem 0.75rem;
  background-color: #2e3746;
  color: white;
  min-height: 32px; /* Consistent header height */
  display: flex;
  align-items: center;
}

.card-content {
  padding: 0.75rem;
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 80px;
  position: relative;
}

.card-content p {
  margin-bottom: 2rem; /* Space for links */
}

.card-content a {
  position: absolute;
  bottom: 8px;
  left: 8px;
}

/* Special handling for support card links */
.card-content p a {
  position: static;
  display: inline;
  padding: 0;
  margin: 0;
}

/* Remove previous card animation styles */
.educational-card:hover {
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  transition: box-shadow 0.2s ease-in-out;
}

/* Responsive grid adjustments */
@media (max-width: 768px) {
  .educational-card {
    min-height: auto;
  }

  .educational-card .card-header {
    padding: 0.25rem 0.5rem;
  }

  .educational-card .card-content {
    padding: 0.5rem;
  }

  .card-header {
    min-height: 24px; /* Consistent mobile height */
    padding: 0.25rem 0.5rem;
  }

  .card-header h3 {
    line-height: 1.2;
    height: 1.2em; /* Force single line */
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .card-content {
    min-height: 60px;
    padding: 0.5rem;
  }

  .card-content p {
    margin-bottom: 1.5rem;
  }

  #rerollButton,
  #selectQuestionButton {
    font-size: 0.7rem; /* Smaller text */
    padding: 0.25rem 0.75rem; /* Smaller padding */
  }

  #rerollButton svg,
  #selectQuestionButton svg {
    width: 0.875rem; /* 14px */
    height: 0.875rem;
  }

  #categoryBadge {
    font-size: 0.7rem;
    padding: 0.25rem 0.75rem;
  }

  #progressChart {
    max-height: 50vh;
  }

  .chart-container {
    margin-bottom: 2rem;
    height: auto !important;
    min-height: 200px;
  }

  .argument-structure-box {
    padding: 0.75rem;
    overflow: visible;
    width: 100%;
  }

  .argument-structure-box #argumentStructureViz {
    min-height: fit-content;
    width: 100%;
    overflow: visible;
  }

  .argument-structure-box .node rect {
    padding: 1.25rem !important;
    width: 160px !important;
  }

  .argument-structure-box .node-text {
    font-size: 15px !important;
    line-height: 1.5 !important;
    max-width: 160px !important;
  }

  .argument-structure-box svg {
    width: 100% !important;
    height: auto !important;
    min-height: auto;
  }

  /* Reduce heading size on mobile */
  .argument-structure-box h3 {
    font-size: 1rem !important;
    margin-bottom: 0.75rem !important;
  }

  .mermaid .node .label {
    font-size: 12px;
    padding: 4px !important;
  }
}

@media (min-width: 768px) {
  .max-w-full {
    max-width: 100%;
  }
}

/* Answer history text wrapping */
.answer-content {
  max-width: 90vw;
  overflow-wrap: anywhere;
  word-break: break-word;
}

.feedback-details {
  max-width: 95%;
}

.loading-dots {
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
}

.loading-dots::after {
  content: ".";
  animation: dot-animation 1.5s infinite;
}

@keyframes dot-animation {
  0%,
  20% {
    content: ".";
  }
  40% {
    content: "..";
  }
  60% {
    content: "...";
  }
  80%,
  100% {
    content: "";
  }
}

.no-wrap-text {
  white-space: nowrap;
}

/* Update the XP bar container to be responsive */
.xp-bar-container {
  position: relative;
  height: 0.9rem;
  background-color: #e5e7eb;
  border-radius: 0 9999px 9999px 0;
  overflow: hidden;
  width: 600px; /* Increased from 450px */
  border: 0px solid black;
  border-left: none;
  margin-left: -30px; /* Adjusted from -40px to reduce overlap with profile image */
  z-index: 1;
}

/* Reset and realign the text container */
#xpInfo .flex.flex-col {
  margin-top: 0;
  padding-left: 20px;
  display: flex;
  flex-direction: column;
  gap: 4px; /* Reduced from 8px */
}

/* Align all text elements consistently */
#xpInfo .flex.flex-col p.text-sm,
#xpInfo .flex.flex-col p.text-base,
#xpInfo p.text-sm {
  position: relative;
  padding-left: 30px;
  margin: 2px 0; /* Reduced vertical spacing */
}

/* Remove previous spacing adjustments */
#xpInfo .flex.flex-col p.text-sm {
  margin-bottom: 8px; /* Reduced from 28px */
}

/* Remove the negative top positioning */
#currentLevel {
  position: relative;
  top: 0; /* Changed from -30px to 0 */
  z-index: 2;
  margin-bottom: 4px;
}

/* Mobile adjustments */
@media (max-width: 768px) {
  .xp-bar-container {
    width: calc(100% + 40px);
    max-width: 350px; /* Increased from 300px */
    margin-left: -30px; /* Adjusted from -40px */
  }

  #xpInfo .flex.flex-col {
    padding-left: 3px;
  }

  #xpInfo .flex.flex-col p.text-sm,
  #xpInfo .flex.flex-col p.text-base,
  #xpInfo p.text-sm {
    padding-left: 3px;
  }
}

.xp-progress-bar {
  position: absolute;
  height: 100%;
  transition: width 0.5s ease-out;
  min-width: 1px;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 9999px;
  border-bottom-right-radius: 9999px;
}

/* Specific styling for the old XP bar */
#xpOldBar {
  z-index: 1;
  border-radius: 9999px 0 0 9999px;
}

/* Specific styling for the new XP bar */
#xpNewBar {
  z-index: 2;
  border-border-radius: 0 9999px 9999px 0;
}

/* When the new bar starts from the beginning */
#xpNewBar:first-child {
  border-radius: 9999px;
}

/* Mini XP bar specific styles */
.mini-xp-bar {
  height: 0.3rem !important;
  width: 180px !important; /* Increased from 170px */
  margin-left: -20px !important; /* Adjusted to reduce overlap with profile image while maintaining connection */
}

/* Add these styles */
.input-mode-tab {
  position: relative;
  transition: all 0.3s ease;
}

.input-mode-tab::after {
  content: "";
  position: absolute;
  bottom: -1px;
  left: 0;
  width: 100%;
  height: 1.5px;
  opacity: 0.5;
  background-color: #4b5563;
  transform: scaleX(0);
  transition: transform 0.3s ease;
}

.input-mode-tab.active::after {
  transform: scaleX(1);
}

.spinner {
  display: inline-block;
  width: 16px;
  height: 16px;
  border: 3px solid rgba(0, 0, 0, 0.2);
  border-top: 3px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-left: 0.5rem;
  vertical-align: middle;
  position: relative;
  bottom: 2px;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.g_id_signin {
  min-height: 45px;
  height: 45px;
  overflow: hidden;
}

.g_id_signin iframe {
  min-height: 45px !important;
}

/* Modal transition */
.fixed.inset-0 {
  z-index: 50; /* High z-index for modal overlay */
}

.fixed.inset-0 > div {
  /* Target modal content */
  transition: transform 0.2s ease-out, opacity 0.2s ease-out;
  z-index: 51; /* Even higher z-index for modal content */
}

.divider {
  display: flex;
  align-items: center;
  text-align: center;
  margin: 1.5em 0;
}

.divider::before,
.divider::after {
  content: "";
  flex: 1;
  border-bottom: 1px solid #e5e7eb;
}

.divider-text {
  padding: 0 1rem;
  color: #6b7280;
  font-size: 0.875rem;
}

/* Add after line 98 */
.argument-structure-box {
  min-height: fit-content;
  overflow: visible;
  max-height: none;
  padding: 1rem;
  margin: 1rem 0;
}

.argument-structure-box #argumentStructureViz {
  min-height: fit-content;
  height: auto;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  overflow: visible;
}

/* Mermaid specific styles */
.mermaid {
  overflow: visible !important;
}

.mermaid .node rect,
.mermaid .node circle,
.mermaid .node ellipse,
.mermaid .node polygon,
.mermaid .node path {
  fill: #f8fafc !important;
  stroke: #1f2937 !important;
  stroke-width: 2px !important;
  rx: 8px !important;
  ry: 8px !important;
}

.mermaid .node.premise rect {
  fill: #f8fafc !important;
}

.mermaid .node.conclusion rect {
  fill: #eef2ff !important;
}

.mermaid .node .label {
  color: #1f2937;
  font-family: system-ui, -apple-system, sans-serif;
  font-size: 14px;
  padding: 8px !important;
}

.mermaid .edgePath .path {
  stroke: #9ca3af !important;
  stroke-width: 2px !important;
}

.mermaid .edgeLabel {
  background-color: #ffffff !important;
  padding: 4px !important;
}

.mermaid .flowchart-link {
  stroke: #9ca3af !important;
  stroke-width: 2px !important;
}

body.loading-translations [data-i18n] {
  visibility: hidden;
}

/* Optional loading indicator */
body.loading-translations [data-i18n]::after {
  visibility: visible;
  content: "";
  display: inline-block;
  width: 1em;
  height: 1em;
  vertical-align: middle;
  background-color: transparent;
}

/* Hide all translatable content initially */
[data-i18n] {
  opacity: 0;
  transition: opacity 0.2s ease-in;
}

/* Show content when translations are loaded */
.translations-loaded [data-i18n] {
  opacity: 1;
}

/* Add these styles */
.chart-wrapper {
  position: relative;
  width: 100%;
  max-height: 400px;
}

.chart-container {
  position: relative;
  height: 250px;
}

@media (max-width: 768px) {
  .chart-wrapper {
    max-height: 300px;
    padding: 0.5rem;
  }

  .chart-container {
    height: 200px;
  }

  /* Adjust button spacing on mobile */
  .chart-wrapper .flex.flex-wrap {
    gap: 0.25rem !important;
  }

  .chart-wrapper button {
    padding: 0.25rem 0.75rem;
    font-size: 0.75rem;
  }

  .argument-structure-box {
    padding: 0.75rem;
    overflow: visible;
    width: 100%;
  }

  .argument-structure-box #argumentStructureViz {
    min-height: fit-content;
    width: 100%;
    overflow: visible;
  }

  .argument-structure-box .node rect,
  .mermaid .node > foreignObject > div {
    min-width: 180px !important;
    max-width: 180px !important;
  }

  .argument-structure-box .node-text {
    font-size: 12px !important;
    max-width: 180px !important;
    padding: 4px !important;
  }
}

.mermaid .node > foreignObject > div {
  white-space: normal !important;
  word-wrap: break-word !important;
  overflow-wrap: break-word !important;
  padding: 8px !important;
  width: 100% !important;
  text-align: center !important;
  min-width: 250px !important;
}

.mermaid .node rect {
  fill: #f8fafc !important;
  stroke: #1f2937 !important;
  stroke-width: 2px !important;
  rx: 8px !important;
  ry: 8px !important;
}

.mermaid .edgeLabel {
  background-color: white !important;
}

.mermaid .edgePath {
  stroke: #9ca3af !important;
  stroke-width: 2px !important;
}

/* Level Indicator Styles */
.level-indicator {
  display: flex;
  align-items: center;
}

/* The image container is always circular with a black border */
.level-indicator .level-image-container {
  border-radius: 50%;
  border: 2px solid black;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 8px;
  flex: 0 0 auto;
  position: relative;
  width: 50px; /* Default size */
  height: 50px; /* Default size */
}

.level-image {
  width: auto;
  height: auto;
  min-width: 100%;
  min-height: 100%;
  object-fit: cover;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(1); /* Reduced scale to show more of the image */
}

/* Header variant: smaller image and level text */
.level-indicator.header .level-image-container {
  width: 50px;
  height: 50px;
}

.level-indicator.header .level-image {
  transform: translate(-50%, -50%) scale(1); /* Slightly larger scale for header since it's already small */
}

.level-indicator.header .level-text {
  font-size: 10px;
  color: #4a5568; /* text-gray-700 */
}

/* XP variant: larger image and level text */
.level-indicator.xp .level-image-container {
  width: 180px;
  height: 180px;
  border: 3px solid black;
  margin-right: 0;
  z-index: 2;
}

.level-indicator.xp .level-image {
  transform: translate(-50%, -50%) scale(1); /* Keep consistent with base scale */
}

.level-indicator.xp .level-text {
  font-size: 1.25rem;
  color: #1a202c; /* text-gray-900 */
}

/* Remove right margin from the level image in the evaluation section */
#xpInfo .level-indicator.xp .level-image-container {
  margin-right: 0;
}

/* Ensure the wrapper is relatively positioned for absolute placement of the indicator */
.level-image-wrapper {
  position: relative;
  display: inline-block;
  margin-right: 0px;
}

/* Circular level number indicator over the top of the level image */
.level-number-indicator {
  position: absolute;
  top: -20px;
  left: 50%;
  transform: translateX(-50%);
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: black;
  color: white;
  font-size: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 3px solid white;
  z-index: 3;
}

/* (Optional) Ensure the XP progress bar fills its container */
.xp-progress-bar {
  height: 100%;
}

/* Update the level indicator spacing */
.level-indicator.xp {
  margin-bottom: 0.5rem; /* Add space between image and text */
}

#xpInfo .flex.flex-col {
  margin-top: 0;
  padding-left: 20px;
}

#xpInfo .flex.flex-col p.text-sm,
#xpInfo .flex.flex-col p.text-base {
  position: relative;
  left: -38px;
  margin-bottom: -31px;
}

#xpInfo .flex.flex-col p.text-sm {
  margin-bottom: 0px;
}

#currentLevel {
  position: relative;
  top: 0;
  z-index: 2;
}

.xp-progress-bar.bg-green-500 {
  background-color: #0da846 !important;
}

@media (max-width: 768px) {
  .xp-bar-container.mini-xp-bar {
    margin-left: -20px; /* Keep consistent with desktop */
    width: 200px !important; /* Slightly smaller on mobile but still larger than original */
  }
}

#xpInfo p.text-sm {
  text-align: left;
  padding-left: 30px;
  margin-top: 8px;
  margin-bottom: 4px;
}

.xp-bar-wrapper {
  margin-top: 40px;
}

/* Adjust formatting of level indicators in the evaluation section */
#evaluationResults .flex.flex-col p.text-sm,
#evaluationResults .flex.flex-col p.text-base,
#challengeEvaluationResults .flex.flex-col p.text-sm,
#challengeEvaluationResults .flex.flex-col p.text-base {
  margin-top: 0.1rem;
}

#evaluationResults .xp-bar-wrapper,
#challengeEvaluationResults .xp-bar-wrapper {
  margin-top: 100px; /* Reduced from 140px to bring XP bar up in challenge section */
}

#evaluationResults .xp-bar-wrapper p.text-sm,
#challengeEvaluationResults .xp-bar-wrapper p.text-sm {
  margin-top: 0;
  margin-bottom: 0;
}

/* Adjust username/level text positioning */
#evaluationResults .move-down {
  position: relative;
  top: 60px !important; /* Consistent spacing for both sections */
}

#challengeEvaluationResults .move-down {
  position: relative;
  top: 60px !important; /* Consistent spacing for both sections */
}

/* Increase font size for username and level text in evaluation section */
#evaluationResults .flex.flex-col p.move-down,
#challengeEvaluationResults .flex.flex-col p.move-down {
  font-size: 1.25rem !important;
  margin-bottom: 5px !important;
}

/* Ensure consistent spacing in both sections */
#evaluationResults .flex.flex-col,
#challengeEvaluationResults .flex.flex-col {
  margin-top: 0;
  padding-left: 20px;
}

/* Adjust XP bar container positioning */
#evaluationResults .xp-bar-container,
#challengeEvaluationResults .xp-bar-container {
  position: relative;
  z-index: 1;
  left: -15px;
  margin-top: -20px; /* Move XP bar up slightly */
}

/* XP Bar Animations */
@keyframes fillProgress {
  from {
    width: var(--start-width);
  }
  to {
    width: var(--end-width);
  }
}

@keyframes levelUpGlow {
  0% {
    box-shadow: 0 0 20px rgba(13, 168, 70, 0.4), 0 0 40px rgba(13, 168, 70, 0.2);
    transform: scale(1);
  }
  20% {
    box-shadow: 0 0 30px rgba(13, 168, 70, 0.5), 0 0 60px rgba(13, 168, 70, 0.3),
      0 0 90px rgba(13, 168, 70, 0.1);
    transform: scale(1.08);
  }
  40% {
    box-shadow: 0 0 40px rgba(13, 168, 70, 0.6), 0 0 80px rgba(13, 168, 70, 0.4),
      0 0 120px rgba(13, 168, 70, 0.2);
    transform: scale(1.12);
  }
  60% {
    box-shadow: 0 0 50px rgba(13, 168, 70, 0.7),
      0 0 100px rgba(13, 168, 70, 0.5), 0 0 150px rgba(13, 168, 70, 0.3);
    transform: scale(1.15);
  }
  80% {
    box-shadow: 0 0 40px rgba(13, 168, 70, 0.6), 0 0 80px rgba(13, 168, 70, 0.4),
      0 0 120px rgba(13, 168, 70, 0.2);
    transform: scale(1.12);
  }
  100% {
    box-shadow: 0 0 20px rgba(13, 168, 70, 0.4), 0 0 40px rgba(13, 168, 70, 0.2);
    transform: scale(1);
  }
}

@keyframes levelImageTransition {
  0% {
    transform: scale(1) rotate(0deg);
    opacity: 1;
    filter: brightness(1) saturate(1);
  }
  20% {
    transform: scale(1.15) rotate(72deg);
    opacity: 0.85;
    filter: brightness(1.3) saturate(1.2) hue-rotate(5deg);
  }
  40% {
    transform: scale(1.18) rotate(144deg);
    opacity: 0.4;
    filter: brightness(1.5) saturate(1.4) hue-rotate(10deg);
  }
  50% {
    transform: scale(1.2) rotate(180deg);
    opacity: 0;
    filter: brightness(1.8) saturate(1.6) hue-rotate(15deg);
  }
  60% {
    transform: scale(1.18) rotate(216deg);
    opacity: 0.4;
    filter: brightness(1.5) saturate(1.4) hue-rotate(10deg);
  }
  80% {
    transform: scale(1.15) rotate(288deg);
    opacity: 0.85;
    filter: brightness(1.3) saturate(1.2) hue-rotate(5deg);
  }
  100% {
    transform: scale(1) rotate(360deg);
    opacity: 1;
    filter: brightness(1) saturate(1);
  }
}

.level-up-glow {
  animation: levelUpGlow 1.6s ease-in-out;
  z-index: 1;
  position: relative;
}

.level-up-glow::after {
  content: "";
  position: absolute;
  top: -25px;
  left: -25px;
  right: -25px;
  bottom: -25px;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(13, 168, 70, 0.4) 0%,
    rgba(13, 168, 70, 0.1) 50%,
    rgba(13, 168, 70, 0) 70%
  );
  z-index: -1;
  animation: pulse 1.6s ease-in-out infinite;
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 0.7;
  }
  50% {
    transform: scale(1.08);
    opacity: 0.9;
  }
  100% {
    transform: scale(1);
    opacity: 0.7;
  }
}

.level-image-transition,
.level-indicator.xp .level-image-transition,
.level-indicator.challenge-xp .level-image-transition,
#xpInfo .level-image-transition,
#challengeXpInfo .level-image-transition {
  animation: levelImageTransition 1.2s cubic-bezier(0.25, 0.1, 0.25, 1) !important;
  perspective: 800px;
  transform-style: preserve-3d;
}

/* Remove particle animations */
@keyframes xpNumberPop {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}

.xp-progress-bar {
  transition: width 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.xp-gained-pop {
  display: inline-block;
  animation: xpNumberPop 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Level Up Message Animation */
@keyframes levelUpMessage {
  0% {
    transform: scale(0.5);
    opacity: 0;
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

#levelUpMessage {
  display: inline-block;
  transform-origin: center;
}

#levelUpMessage:not(:empty) {
  animation: levelUpMessage 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  color: #0da846;
  font-weight: bold;
  text-shadow: 0 0 10px rgba(13, 168, 70, 0.3);
}

/* Image enhancement during level-up */
.level-image-container {
  transition: transform 0.3s ease;
}

.level-up-glow .level-image {
  filter: drop-shadow(0 0 5px rgba(13, 168, 70, 0.7));
}

/* Add 3D-like effect during level transition */
/* This was overriding the animation, removing the duplicate class definition */

/* Make sure challenge-xp variant has the same styling as xp variant */
.level-indicator.challenge-xp .level-image-container {
  width: 180px;
  height: 180px;
  border: 3px solid black;
  margin-right: 0;
  z-index: 2;
}

.level-indicator.challenge-xp .level-image {
  transform: translate(-50%, -50%) scale(1);
}

.level-indicator.challenge-xp .level-text {
  font-size: 1.25rem;
  color: #1a202c; /* text-gray-900 */
}

/* Remove right margin from the level image in the challenge evaluation section */
#challengeXpInfo .level-indicator.challenge-xp .level-image-container {
  margin-right: 0;
}

/* Apply the same styling to challenge XP info as main XP info */
#challengeXpInfo .flex.flex-col {
  margin-top: 0;
  padding-left: 20px;
}

/* Ensure the progress bar is behind the level image */
#challengeXpInfo .xp-bar-container {
  position: relative;
  z-index: 1;
  left: -15px;
}

/* Update text positions so they do not overlap the level image */
#challengeXpInfo .flex.flex-col p.text-sm,
#challengeXpInfo .flex.flex-col p.text-base {
  position: relative;
  left: 0;
  margin-bottom: 0.25rem;
}

/* Ensure the level image is above the progress bar */
#challengeXpInfo .level-image-wrapper {
  position: relative;
  z-index: 2;
}

/* Ensure the level number indicator is at the top */
#challengeXpInfo .level-number-indicator {
  z-index: 3;
}

/* Level Text Transition Animation */
@keyframes levelTextTransition {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  50% {
    opacity: 0;
    transform: translateY(-10px);
  }
  50.1% {
    opacity: 0;
    transform: translateY(10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.level-text-transition {
  animation: levelTextTransition 1.2s cubic-bezier(0.25, 0.1, 0.25, 1);
}

/* Progress Number Animation */
@keyframes countUp {
  from {
    opacity: 0.7;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.count-up-animation {
  display: inline-block;
  animation: countUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

/* Ensure consistent level-up glow animation between main and challenge sections */
#challengeXpInfo .level-up-glow::after {
  /* Reduce the intensity of the glow effect for the challenge section */
  background: radial-gradient(
    circle,
    rgba(13, 168, 70, 0.2) 0%,
    rgba(13, 168, 70, 0.05) 50%,
    rgba(13, 168, 70, 0) 70%
  );
  /* Use a less intense animation */
  animation: pulse 1.6s ease-in-out;
}

/* Additional control for challenge glow intensity */
.challenge-glow.level-up-glow {
  animation: challengeLevelUpGlow 1.6s ease-in-out;
}

.challenge-glow.level-up-glow::after {
  opacity: 0.5;
  animation: challengePulse 1.6s ease-in-out;
}

/* Custom keyframes for challenge glow with reduced intensity */
@keyframes challengeLevelUpGlow {
  0% {
    box-shadow: 0 0 10px rgba(13, 168, 70, 0.2), 0 0 20px rgba(13, 168, 70, 0.1);
    transform: scale(1);
  }
  20% {
    box-shadow: 0 0 15px rgba(13, 168, 70, 0.25),
      0 0 30px rgba(13, 168, 70, 0.15), 0 0 45px rgba(13, 168, 70, 0.05);
    transform: scale(1.04);
  }
  40% {
    box-shadow: 0 0 20px rgba(13, 168, 70, 0.3), 0 0 40px rgba(13, 168, 70, 0.2),
      0 0 60px rgba(13, 168, 70, 0.1);
    transform: scale(1.06);
  }
  60% {
    box-shadow: 0 0 25px rgba(13, 168, 70, 0.35),
      0 0 50px rgba(13, 168, 70, 0.25), 0 0 75px rgba(13, 168, 70, 0.15);
    transform: scale(1.08);
  }
  80% {
    box-shadow: 0 0 20px rgba(13, 168, 70, 0.3), 0 0 40px rgba(13, 168, 70, 0.2),
      0 0 60px rgba(13, 168, 70, 0.1);
    transform: scale(1.06);
  }
  100% {
    box-shadow: 0 0 10px rgba(13, 168, 70, 0.2), 0 0 20px rgba(13, 168, 70, 0.1);
    transform: scale(1);
  }
}

@keyframes challengePulse {
  0% {
    transform: scale(1);
    opacity: 0.3;
  }
  50% {
    transform: scale(1.04);
    opacity: 0.4;
  }
  100% {
    transform: scale(1);
    opacity: 0.3;
  }
}
