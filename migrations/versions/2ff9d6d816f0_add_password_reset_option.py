"""Add password reset option

Revision ID: 2ff9d6d816f0
Revises: ebb1cab3bea4
Create Date: 2025-02-16 21:29:20.990906

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "2ff9d6d816f0"
down_revision = "ebb1cab3bea4"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("xp", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("tier", sa.String(length=20), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("password_hash", sa.String(length=255), nullable=True),
        sa.Column("google_id", sa.String(length=255), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("profile_pic", sa.String(length=512), nullable=True),
        sa.Column("reset_token", sa.String(length=100), nullable=True),
        sa.Column("reset_token_expiry", sa.DateTime(), nullable=True),
        sa.Column("category_preferences", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("google_id"),
        sa.UniqueConstraint("reset_token"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "answer",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("user_uuid", sa.String(length=36), nullable=False),
        sa.Column("question_id", sa.String(length=50), nullable=True),
        sa.Column("question_text", sa.Text(), nullable=True),
        sa.Column("claim", sa.Text(), nullable=False),
        sa.Column("argument", sa.Text(), nullable=False),
        sa.Column("counterargument", sa.Text(), nullable=True),
        sa.Column("evaluation_scores", sa.JSON(), nullable=False),
        sa.Column("evaluation_feedback", sa.JSON(), nullable=False),
        sa.Column("xp_earned", sa.Integer(), nullable=False),
        sa.Column("challenge", sa.Text(), nullable=True),
        sa.Column("challenge_response", sa.Text(), nullable=True),
        sa.Column("challenge_evaluation_scores", sa.JSON(), nullable=False),
        sa.Column("challenge_evaluation_feedback", sa.JSON(), nullable=False),
        sa.Column("challenge_xp_earned", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_uuid"], ["users.uuid"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("answer", schema=None) as batch_op:
        batch_op.create_index(
            "ix_user_question", ["user_uuid", "question_id"], unique=False
        )

    op.create_table(
        "feedback",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("user_uuid", sa.String(length=36), nullable=True),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column("category", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_uuid"], ["users.uuid"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "visit",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("user_uuid", sa.String(length=36), nullable=True),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.Column("user_agent", sa.String(length=200), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_uuid"], ["users.uuid"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("visit")
    op.drop_table("feedback")
    with op.batch_alter_table("answer", schema=None) as batch_op:
        batch_op.drop_index("ix_user_question")

    op.drop_table("answer")
    op.drop_table("users")
    # ### end Alembic commands ###
